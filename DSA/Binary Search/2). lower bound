#include <iostream>
using namespace std;

int main() {
    int arr[9] = {1, 2, 4, 5, 9, 15, 18, 21, 24};
    int n = 9;
    int x = 20;
    
    for (int i = 0; i < n; i++) {
        if (arr[i] > x) {
            if (i == 0) {
                cout << "No smaller element exists";  
            } else {
                cout << arr[i - 1];  
            }
            break;
        }
    }

    return 0;
}


//tc-> o(n)

//code using binary search

#include<iostream>
using namespace std;
int main(){
    int arr[9]={1,2,4,5,9,15,18,21,24};
    int n=9;
    int x=21;
    int lo=0;
    int hi=n-1;
    bool flag=false;
    while(lo<=hi){
        int mid=lo+(hi-lo)/2;
        if(arr[mid]==x){
            flag=true;
            cout<<arr[mid-1];
            // cout<<arr[mid+1] -> upper bound
            break;
        }
        else if(arr[mid]<x)
        lo=mid+1;
        else
        hi=mid-1;
    }
    if(flag==false)
    cout<<arr[hi]; //for lower bound
    cout<<endl;
    // cout<<arr[lo]; //for upper bound
}

//tc->o(logn)->optimal code
