#include<iostream>
using namespace std;
class Node{
    public:
    int val;
    Node*next;
    //using constructor
    Node(int val){
    this->val=val;
    this->next=NULL;
    }
};
void display(Node*head){
    Node*temp=head;
    while(temp!=NULL){
        cout<<temp->val<<" ";
        temp=temp->next;
    }
    cout<<endl;
}
int size(Node*head){
    Node*temp=head;
    int n=0;
    while(temp!=NULL){
        cout<<temp->val<<" ";
        temp=temp->next;
        n++;
    }
    return n;
}
void revDisplay(Node* head){
    if(head==NULL) return;  //base case
    revDisplay(head->next); //call
    cout<<head->val<<" ";   //kaam
}
void displayrec(Node * head){
    if(head==NULL) return;  //base case
    cout<<head->val<<" ";   //kaam
    displayrec(head->next); //call
}
int main(){
    Node* a=new Node(10);
    Node* b=new Node(20);
    Node* c=new Node(30);
    Node* d=new Node(40);
    Node* e=new Node(50);
    a->next=b;
    b->next=c;
    c->next=d;
    d->next=e;
    // displayrec(a);
    // cout<<size(a);
    revDisplay(a);
}

//output-> 50 40 30 20 10
