#include<iostream>
using namespace std;

class Node {
public:
    int val;
    Node* next;
    Node* prev;

    Node(int val) {
        this->val = val;
        this->next = NULL;
        this->prev = NULL;
    }
};

void display(Node* head) {
    while (head != NULL) {
        cout << head->val << " ";
        head = head->next;
    }
    cout << endl;
}

void displayrev(Node* tail) {
    while (tail != NULL) {
        cout << tail->val << " ";
        tail = tail->prev;  // Fix: Traverse backwards using prev
    }
    cout << endl;
}

void displayrec(Node* head) {
    if (head == NULL) return;
    cout << head->val << " ";
    displayrec(head->next);
}

void displayrecrev(Node* head) {
    if (head == NULL) return;
    displayrecrev(head->next);
    cout << head->val << " ";
}

int main() {
    Node* a = new Node(10);
    Node* b = new Node(20);
    Node* c = new Node(30);
    Node* d = new Node(40);
    Node* e = new Node(50);
    Node* f = new Node(60);

    a->next = b;
    b->next = c;
    c->next = d;
    d->next = e;
    e->next = f;

    b->prev = a;
    c->prev = b;
    d->prev = c;
    e->prev = d;
    f->prev = e;

    display(a);         
    displayrec(a);      
    displayrecrev(a);   
    displayrev(e);      

    return 0;
}
