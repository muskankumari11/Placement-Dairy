//leetcode

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        int n=nums.size();
        unordered_map<int,int>mp;
        for(auto & it:nums){
            mp[it]++;
            if(mp[it]>1)
            return true;
        }
        return false;
        
    }
};

//FULL CODE

#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_map<int, int> mp;
        for (auto& it : nums) {
            mp[it]++; 
            if (mp[it] > 1) 
                return true;
        }
        return false; 
    }
};

int main() {
    Solution solution;
    vector<int> nums = {1, 2, 3, 4, 5, 2};
    if (solution.containsDuplicate(nums)) {
        cout << "Contains duplicate" << endl;
    } else {
        cout << "No duplicates found" << endl;
    }
    return 0;
}
