//Leetcode Question

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n=nums.size();
        vector<int>ans;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(nums[i]+nums[j]==target)
                return {i,j};
            }
        }
        return ans;
    }
};

//FULL CODE

#include<bits/stdc++.h>
using namespace std;
vector<int> twosum(vector<int>& nums, int target) {
    for (int i = 0; i < nums.size(); i++) {
        for (int j = i + 1; j < nums.size(); j++) {
            if (nums[i] + nums[j] == target) {
                return {i, j};  
            }
        }
    }
    return {};  
}

int main() {
    vector<int> nums = {2, 7, 8, 11};
    int target = 9;
    vector<int> result = twosum(nums, target);

    if (!result.empty()) {
        cout << "i is " << result[0] << " j is " << result[1];  
    } else {
        cout << "No solution found." << endl; 
    }

    return 0;
}
