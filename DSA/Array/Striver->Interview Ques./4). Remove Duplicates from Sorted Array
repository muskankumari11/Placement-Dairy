//optimal soln:-
#include<bits/stdc++.h>

using namespace std;
int removeDuplicates(int arr[], int n)
{
  int i = 0;
  for (int j = 1; j < n; j++) {
    if (arr[i] != arr[j]) {
      i++;
      arr[i] = arr[j];
    }
  }
  return i + 1;
}
int main() {
  int arr[] = {1,1,2,2,2,3,3};
  int n = sizeof(arr)/sizeof(arr[0]);
  int k = removeDuplicates(arr, n);
  cout << "The array after removing duplicate elements is " << endl;
  for (int i = 0; i < k; i++) {
    cout << arr[i] << " ";
  }
}

//yaha pe k ho jayega 3 int main() wale me
//output-> The array after removing duplicate elements is 
1 2 3 

//code -optimal soln in site (short cut)
int removeDuplicates(vector<int> &arr, int n) {
    // Write your code here.
    int i = 0;
    for (int j = 1; j < n; j++) {  
        if (arr[i] != arr[j]) {
            i++;  
            arr[i] = arr[j]; 
        }
    }
    return i + 1;  
}

//o/p-> 3

//Time Complexity: O(N)

//Space Complexity: O(1)
