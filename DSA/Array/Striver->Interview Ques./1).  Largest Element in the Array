#include <bits/stdc++.h>

int largestElement(vector<int> &arr, int n) {
    int largest = arr[0];
    for(int i = 1; i < n; i++) {
        if(arr[i] > largest)
            largest = arr[i];
    }
   return largest;
}

//gfg
class Solution {
  public:
    int largest(vector<int> &arr) {
        int n=arr.size();
        int maxi=INT_MIN;;
        for(int i=0;i<n;i++){
             maxi=max(maxi,arr[i]);
            
        }
        return maxi;
        // code here
    }
};


//full code

#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int largeElement(vector<int>& arr, int n) {  // Return int instead of vector<int>
        int largest = arr[0];  // Initialize largest outside the loop
        for (int i = 1; i < n; i++) {  // Start loop from index 1
            if (largest < arr[i]) {
                largest = arr[i];
            }
        }
        return largest;  // Return the largest element
    }
};

int main() {
    vector<int> arr = {1, 4, 100, 5};
    int n = arr.size();  // Get the size of array
    Solution obj;
    int ans = obj.largeElement(arr, n);  // Pass both parameters
    cout << "Largest element: " << ans << endl;
    return 0;
}

//tc-> o(n)
