#include <bits/stdc++.h> 
using namespace std;

int maximumProfit(vector<int>& prices) {
    int n = prices.size();
    if (n == 0) {
        return 0;  
    }

    int minPrice = prices[0]; 
    int maxi = 0; 

    for (int i = 1; i < n; i++) {
        if (prices[i] < minPrice) {
            minPrice = prices[i]; 
        }
        int profit = prices[i] - minPrice; 
        maxi = max(maxi, profit); 
    }

    return maxi; 
}

//leetcode

class Solution {
public:
    int maxProfit(vector<int>& prices) {
       int n=prices.size();
        if(n==0){
        return 0;
       }
       int min=prices[0];
       int maxi=0;
       for(int i=1;i<n;i++){
        if(prices[i]<min){
        min=prices[i];
       }
       int profit=prices[i]-min;
        maxi=max(maxi,profit);
            }
       return maxi;
    }
};
