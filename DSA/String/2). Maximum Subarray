//LEETCODE
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int currsum=0;
        int n=nums.size();
        int maxsum=INT_MIN;
        for(int i=0;i<n;i++){
            currsum+=nums[i];
            maxsum=max(currsum, maxsum);
            if(currsum<0)
            currsum=0;
        }
        return maxsum;
    }
};


//FULL CODE
#include<bits/stdc++.h>
using namespace std;
int maxsumarray(vector<int>&arr){
    int n=arr.size();
    int currsum=0;
    int maxsum=INT_MIN;
    for(int i=0;i<n;i++){
        currsum+=arr[i];
        maxsum=max(currsum, maxsum);
        if(currsum<0)
        currsum=0;
    }
    return maxsum;
}
int main(){
    vector<int>arr={-2,1,-3,4,-1,2,1,-5,4};
    int result=maxsumarray(arr);
    cout<<"max array sum is"<<result;
    
}
